// main: ../main.scss

@import "../../vendors/bourbon/bourbon";
@import "vars";

// shadows

// Focus shadow mixin.
@mixin focus-shadow() {
  box-shadow: 0 0 8px rgba(0,0,0,.18),0 8px 16px rgba(0,0,0,.36);
}

@mixin drop-shadow($depth) {
  @if $depth == 0 {
    box-shadow: none;
  }
  @if $depth == 1 {
    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
                0 3px 1px -2px rgba(0, 0, 0, $shadow-key-umbra-opacity),
                0 1px 5px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity);
  }
  @if $depth == 2 {
    box-shadow: 0 3px 4px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
                0 3px 3px -2px rgba(0, 0, 0, $shadow-key-umbra-opacity),
                0 1px 8px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity);
  }
  @if $depth == 3 {
    box-shadow: 0 4px 5px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
                0 1px 10px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
                0 2px 4px -1px rgba(0, 0, 0, $shadow-key-umbra-opacity);
  }
  @if $depth == 4 {
    box-shadow: 0 6px 10px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
                0 1px 18px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
                0 3px 5px -1px rgba(0, 0, 0, $shadow-key-umbra-opacity);
  }
  @if $depth == 5 {
    box-shadow: 0 8px 10px 1px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
                0 3px 14px 2px rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
                0 5px 5px -3px rgba(0, 0, 0, $shadow-key-umbra-opacity);
  }
  @if $depth == 6 {
    box-shadow: 0 16px 24px 2px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
                0  6px 30px 5px rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
                0  8px 10px -5px rgba(0, 0, 0, $shadow-key-umbra-opacity);
  }
}

@mixin ripple($orig-background-color: transparent, $ripple-color: $light-accent) {
  background: $orig-background-color radial-gradient(circle, rgba($ripple-color, 0.3) 15%, transparent 30%) no-repeat 50% 50% / 0; // color image repeat position size
  @include transition(background-size 0.3s $animation-curve-linear-out-slow-in, color 0.6s $animation-curve-linear-out-slow-in);

  &:focus {
    outline: 0;
    background-size: 1000%;
  }
}

@mixin transition-default($value: all 0.5s ease-out) {
  @include transition($value);
}

// burger
@mixin burger($width, $height, $gutter, $color, $border-radius) {
  $burger-height: $height !global;
  $burger-gutter: $gutter !global;
  position: relative;

  &, &:before, &:after {
    display: block;
    width: $width;
    height: $height;
    background-color: $color;
    @include transition-default;
    @if $border-radius != 0 {
      border-radius: $border-radius;
    }
  }

  &:before, &:after {
    position: absolute;
    content: "";
  }

  &:before { top: -($height + $gutter); }

  &:after { top: $height + $gutter; }
}