// main: ../main.scss

// large header
$header-large: true;

// random header
$random-header: true;

// sidebar image
$sidebar-img: false;
$sidebar-img-height: 224px;

@if $sidebar-img {
  .side::after {
    position: absolute;
    top: -$sidebar-img-height - 16px;
    display: block;
    height: $sidebar-img-height;
    width: 100%; // 330px
    content: '';
    border-radius: 2px;
    background: url(%%sidebar%%) center;
    @include drop-shadow(1);
  }
}

// pinned topics
$pinned-topics: true;

$num-stickied-links: 3; // number of stickied links
$num-stickied-menus: 2; // number of stickied menus

// desired image backgrounds for stickies
$sticky-link-images: 'help', 'album', 'calendar';
$sticky-menu-images: 'media', 'shows';

$stickies-selectors: ();

@if $pinned-topics {
  // add stickied links to map
  @if $num-stickied-links > 0 {
    @for $num-stickied-links from 1 through $num-stickied-links {
      $stickies-selectors: append($stickies-selectors, unquote('.res-nightmode .titlebox blockquote p:nth-of-type(#{$num-stickied-links})'), 'comma');
      $stickies-selectors: append($stickies-selectors, unquote('.titlebox blockquote p:nth-of-type(#{$num-stickied-links})'), 'comma');
    }
  }

  // add stickied menus to map
  @if $num-stickied-menus > 0 {
    @for $num-stickied-menus from 1 through $num-stickied-menus {
      $stickies-selectors: append($stickies-selectors, unquote('.res-nightmode .titlebox blockquote ul:nth-of-type(#{$num-stickied-menus})'), 'comma');
      $stickies-selectors: append($stickies-selectors, unquote('.titlebox blockquote ul:nth-of-type(#{$num-stickied-menus})'), 'comma');
    }
  }

  #{$stickies-selectors} {
    background: url(%%stickies%%) no-repeat;
  }

  // assign image backgrounds
  @if $num-stickied-links > 0 {
    @for $num-stickied-links from 1 through $num-stickied-links {
      @include sticky-image-switch(link, nth($sticky-link-images, $num-stickied-links), $num-stickied-links);
    }
  }

  @if $num-stickied-menus > 0 {
    @for $num-stickied-menus from 1 through $num-stickied-menus {
      @include sticky-image-switch(menu, nth($sticky-menu-images, $num-stickied-menus), $num-stickied-menus);
    }
  }

  .res-nightmode .titlebox blockquote::after { background-color: $dark-cards; }

  .titlebox blockquote {
    @if ($header-large == true) {
      top: 312px;
    } @else {
      top: 239px;
    }

    position: fixed;
    left: 16px;
    border: 0;
    margin: 0 !important;
    padding: 0;

    &::after {
      position: absolute;
      top: 0;
      z-index: -1;
      display: block;
      height: 100%;
      width: 60px;
      content: '';
      border-radius: 2px;
      @include drop-shadow(1);
      background-color: $light-cards;
    }

    p,
    ul,
    a {
      @include border-right-radius(2px);
    }

    p,
    ul {
      width: 60px;
      height: 60px;
      margin: 0 !important;
      overflow: hidden;
      background-repeat: no-repeat;
      background-position: 16px 50%;
    }

    p:hover {
      width: 100%;
      background-color: $primary !important;
    }

    a {
      display: block;
      height: 60px;
      border-left-width: 60px;
      border-left-style: solid;
      border-left-color: transparent;
      padding: 0 16px;
      line-height: 60px;
      font-size: 14px;
      color: $dark-text !important;
      background-clip: padding-box;
      background-color: rgba($tooltip, 1);

      &:hover {
        color: $primary !important;
      }
    }

    ul {
      padding: 0;

      &:hover {
        width: 100%;
        overflow: visible;
        background-color: $primary !important;
      }

      ul {
        // avoids overlap of bg images due to nested ul
        background-image: none !important;
        background-color: transparent !important;

        &:hover { background-color: transparent !important; }
      }

      li {
        list-style-type: none;

        // different styles for links within ul
        a {
          border: 0;
          margin-left: 60px;
        }
      }
    }
  }
}