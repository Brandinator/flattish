// main: ../../main.scss

// post rank
.rank { display: none; }

// vote arrow/score column & thumbnail margin
.midcol {
	@include margin(null em(16, 13) null 0);
	// width: em(24, 13) !important;
	width: em(32, 13) !important; // ;_; gotta override inline styling
}

.res-nightmode .link .arrow,
.res-nightmode .reddit-link .arrow,
.res-nightmode .comment .arrow {
	height: em(18, 13) !important;
	width: em(24, 13) !important;

	&.upmod {
		background-image: url(%%upvote-pressed%%) !important;
		background-position: 0 50% !important;
	}

	&.downmod {
		background-image: url(%%downvote-pressed%%) !important;
		background-position: 0 50% !important;
	}

	&.up,
	&.up:hover {
		background-image: url(%%upvote-night%%) !important;
		background-position: 0 50% !important;
	}

	&.down,
	&.down:hover {
		background-image: url(%%downvote-night%%) !important;
		background-position: 0 50% !important;
	}
}

// also affects sidebar vote arrows
.arrow {
	height: em(18, 13);
	width: em(24, 13);

	&.upmod {
		background-image: url(%%upvote-pressed%%);
		background-position: 0 50%;
	}

	&.downmod {
		background-image: url(%%downvote-pressed%%);
		background-position: 0 50%;
	}

	&.up {
		background-image: url(%%upvote%%);
		background-position: 0 50%;
	}

	&.down {
		background-image: url(%%downvote%%);
		background-position: 0 50%;
	}
}

.res-nightmode #siteTable {
	background-color: $dark-background;

	.score.unvoted { color: $dark-disabled-text !important; }

	&>.thing {
		@include card(10, 1, $dark-cards, true);

		.title {
			color: $primary !important;

			&:visited { color: $accent !important; }
		}

		.domain,
		.domain a,
		.tagline {
			color: $dark-secondary-text !important;
		}
	}

}

#siteTable {

	// aligns score between new arrows
	.score {

		&.unvoted { color: $light-disabled-text; }

		&.likes { color: $upvote; }

		&.dislikes { color: $downvote; }
	}

	&>.likes .score,
	&>.dislikes .score,
	&>.thing .score {
		font-size: em(14, 13);
		position: relative;
	}

	// individual post listings
	&>.thing {
		@include animation(papersplit 5s ease-out);
		@include card(10, 1);
		@include transition-default;
		height: auto !important;
		margin-bottom: em(16, 10);

		// remove padding from topmost post
		&:first-of-type {
			// padding-top: 0;
		}

		.title {
			color: $link-color;
			line-height: 1.35;
			margin: 0;

			&:visited { color: $link-color-visited; }
		}

		.domain,
		.domain a,
		.tagline {
			color: $light-secondary-text;
		}
	}
}

// color of post score
.thing .link .score {

	&.likes { color: $upvote; }

	&.dislikes { color: $downvote; }
}

// thumbnail
.res-nightmode .thumbnail {
	border: em(1, 10) solid $dark-hint-text !important;

	&:hover {
		border-color: $dark-secondary-text !important;
	}

	&.self {
		background: url(%%thumbnail-self-night%%) 0 no-repeat;
	}

	&.default {
		background: url(%%thumbnail-default-night%%) 0 no-repeat;
	}
}

.thumbnail {
	border: em(1, 10) solid $light-hint-text;
	border-radius: 50%;
	font-size: inherit;
	margin: 0 em(16, 10) 0 0;
	max-height: em(70, 10);
	@include transition-default;

	&:hover {
		border-color: $light-secondary-text;
	}

	img {
		// height: auto;
		height: em(70, 10);
		width: auto;
		max-height: em(70, 10);
	}

	&.self,
	&.default {
		@extend .thumbnail;
		height: em(70, 10);
		width: em(70, 10);
	}

	&.self {
		background: url(%%thumbnail-self%%) 0 no-repeat;
	}

	&.default {
		background: url(%%thumbnail-default%%) 0 no-repeat;
	}
}

// nsfw thumbnail styling
.res-nightmode .thing.over18 > .thumbnail.self {
	background: url(%%nsfw-night%%) 0 no-repeat;
	border-color: rgba($nsfw, 0.7) !important;

	&:hover {
		border-color: $nsfw !important;
	}
}

.thing.over18 > .thumbnail.self {
	background: url(%%nsfw%%) 0 no-repeat;
	border-color: rgba($nsfw, 0.26);

	&:hover {
		border-color: rgba($nsfw, 0.54);
	}
}

// mod approved post
.domain,
.approval-checkmark {
	float: right;
}

// media and self post expansion buttons
.res-nightmode .expando-button {
	border: em(1, 10) solid $dark-hint-text;

	&:hover {
		border-color: $dark-secondary-text;
	}

	&.collapsed,
	&.collapsed:hover,
	&.expanded,
	&.expanded:hover {

		&:before,
		&:after {
			background-color: $white;
		}
	}

	// video expandos
	&.video {

		&.collapsed,
		&.collapsed:hover,
		&.expanded,
		&.expanded:hover { background: url(%%play-night%%) 0 no-repeat !important; }
	}

	// image expandos
	&.image {
		box-sizing: unset; // to force width and height to 25px

		&.collapsed,
		&.collapsed:hover,
		&.expanded,
		&.expanded:hover {
			background: url(%%camera-night%%) 0 no-repeat !important; // ;_; thx res
		}
	}

	// self expandos
	&.selftext {

		&.collapsed,
		&.collapsed:hover,
		&.expanded,
		&.expanded:hover { background: url(%%text-night%%) 0 no-repeat !important; }
	}
}

.expando-button {
	position: relative;
	top: em(2, 10);
	width: em(25, 10);
	height: em(25, 10);
	z-index: 1;
	@include margin(null em(6, 10) em(6, 10) null);
	border: em(1, 10) solid $light-hint-text;
	border-radius: em(2, 10);
	cursor: pointer;
	opacity: 0.54;
	@include transition-default;

	&:hover {
		border-color: $light-secondary-text;
	}

	&.collapsed,
	&.collapsed:hover,
	&.expanded,
	&.expanded:hover {

		&:before,
		&:after {
			background-color: $black;
			content: "";
			position: absolute;
			display: block;
		}

		// horizontal
		&:before {
			width: em(7, 10);
			height: em(1, 10);
			top: em(17, 10);
			left: em(14, 10);
		}

		// vertical
		&:after {
			width: em(1, 10);
			height: em(7, 10);
			top: em(14, 10);
			left: em(17, 10);
		}
	}

	// animate expand/collapse
	&.collapsed:after,
	&.expanded:after { @include transition-default; }

	&.collapsed:after { @include animation(minustoplus 0.5s ease 1); }

	&.expanded:after {
		@include animation(minustoplus 0.5s ease 1 reverse);
		transform: rotate(90deg);
	}

	// video expandos
	&.video {

		&.collapsed,
		&.collapsed:hover,
		&.expanded,
		&.expanded:hover { background: url(%%play%%) 0 no-repeat; }
	}

	// image expandos
	&.image {
		box-sizing: unset; // to force width and height to 25px

		&.collapsed,
		&.collapsed:hover,
		&.expanded,
		&.expanded:hover {
			background: url(%%camera%%) 0 no-repeat !important; // ;_; thx res
		}
	}

	// self expandos
	&.selftext {

		&.collapsed,
		&.collapsed:hover,
		&.expanded,
		&.expanded:hover { background: url(%%text%%) 0 no-repeat; }
	}
}

.self .expanded ~ .expando .usertext-body {
	@include animation(0.2s slide-down $animation-curve-default forwards);
}

.tagline,
.flat-list.buttons { font-size: em(12, 10); }

// "submitted by"
.tagline { margin: em(8, 12) 0; }

// target only taglines where expandos are also present
.expando-button ~ .tagline {
	position: relative;
	left: em(2, 12);
	top: em(9, 12);
	margin: 0;
	z-index: 0;
}

.flat-list.buttons {
	clear: left;
	left: em(-1, 12);
	position: relative;

	li { line-height: em(14, 12); }
}

// selftext body
.res-nightmode .link .usertext-body .md {
	border-color: $dark-secondary-text;
}

.link .usertext-body .md {
	background-color: $light-background;
	border-color: $light-secondary-text;
	border-radius: em(2, 14);
}

// nsfw stamp
.entry .buttons li.nsfw-stamp,
.nsfw-stamp acronym {
	border: 0 !important; // ;_; thx reddit css
	border-radius: em(2, 12);
	background-color: $nsfw;
	color: $white;
	font-size: em(12, 12);
	font-weight: bold;
	line-height: 0;
	padding: 0 em(2, 12);
}

.res-nightmode .entry .buttons li a {
	color: $dark-secondary-text;
}

.entry .buttons li a {
	color: $light-secondary-text;
//
// 	&:not(.comments):not(.flairselectbtn):not(.yes):not(.no) {
// 		display: inline-block;
// 		text-indent: -9999em;
// 		color: transparent;
// 	}
}

// // set width of share, report, save, remove, and nsfw/un-nsfw buttons
// .share a,
// .report-button a,
// .link-save-button a,
// .remove-button input[value="removed"] ~ span > a,
// .marknsfw-button input[value="marked"] ~ span > a,
// .unmarknsfw-button input[value="unmarked"] ~ span > a {
// 	width: em(14, 12);
// }
//
// // set width of delete and remove icons
// .del-button span > a,
// .remove-button input[value="spammed"] ~ span > a {
// 	width: em(12, 12);
// }
//
// // share, save/unsave, report
// @each $link-button in share, link-save-button, link-unsave-button, report-button {
// 	.#{$link-button} a { background: url(%%#{$link-button}%%) 0 no-repeat; }
// }
//
// // hide and unhide
// @each $link-buttons in hide, unhide {
// 	.hide-button span > a[action="#{$link-buttons}"] {
// 		width: em(16, 12); // width of hide/unhide icons
// 		background: url(%%#{$link-buttons}%%) 0 no-repeat;
// 	}
// }
//
// // spam
// .remove-button input[value="spammed"] ~ span > a { background: url(%%spam%%) 0 no-repeat; }
//
// // delete
// .del-button span > a { background: url(%%delete%%) 0 no-repeat; }
//
// // remove
// .remove-button input[value="removed"] ~ span > a { background: url(%%remove%%) 0 no-repeat; }
//
// // nsfw
// .marknsfw-button input[value="marked"] ~ span > a { background: url(%%marked-nsfw%%) 0 no-repeat; }
//
// // un-nsfw
// .unmarknsfw-button input[value="unmarked"] ~ span > a { background: url(%%unmarked-nsfw%%) 0 no-repeat; }
//
// // remove images from yes/no for delete, remove, and nsfw buttons
// .del-button span > a,
// .remove-button input[value="removed"] ~ span > a,
// .unmarknsfw-button input[value="unmarked"] ~ span > a {
// 	&.yes,
// 	&.no {
// 		background: none;
// 	}
// }
//
// // approve post button
// .approve-button span > a {
// 	width: em(15, 12);
// 	background: url(%%approve%%) 0 no-repeat;
// }

.error {
	color: $error;
}
